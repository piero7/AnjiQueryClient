//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace QueryClient.WebServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryPackage", Namespace="http://schemas.datacontract.org/2004/07/QueryCilent")]
    [System.SerializableAttribute()]
    public partial class QueryPackage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.WebServiceReference.ShowenInfo[] InfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.WebServiceReference.QueryMold QueryMoldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Feature {
            get {
                return this.FeatureField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureField, value) != true)) {
                    this.FeatureField = value;
                    this.RaisePropertyChanged("Feature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.WebServiceReference.ShowenInfo[] InfoList {
            get {
                return this.InfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoListField, value) != true)) {
                    this.InfoListField = value;
                    this.RaisePropertyChanged("InfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.WebServiceReference.QueryMold QueryMold {
            get {
                return this.QueryMoldField;
            }
            set {
                if ((this.QueryMoldField.Equals(value) != true)) {
                    this.QueryMoldField = value;
                    this.RaisePropertyChanged("QueryMold");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShowenInfo", Namespace="http://schemas.datacontract.org/2004/07/QueryService")]
    [System.SerializableAttribute()]
    public partial class ShowenInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.WebServiceReference.FlgMold QueryTargetMoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.WebServiceReference.ReturnMold ReturnMoldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContestId {
            get {
                return this.ContestIdField;
            }
            set {
                if ((this.ContestIdField.Equals(value) != true)) {
                    this.ContestIdField = value;
                    this.RaisePropertyChanged("ContestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.WebServiceReference.FlgMold QueryTargetMold {
            get {
                return this.QueryTargetMoldField;
            }
            set {
                if ((this.QueryTargetMoldField.Equals(value) != true)) {
                    this.QueryTargetMoldField = value;
                    this.RaisePropertyChanged("QueryTargetMold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.WebServiceReference.ReturnMold ReturnMold {
            get {
                return this.ReturnMoldField;
            }
            set {
                if ((this.ReturnMoldField.Equals(value) != true)) {
                    this.ReturnMoldField = value;
                    this.RaisePropertyChanged("ReturnMold");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryMold", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.Log")]
    public enum QueryMold : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weixin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShotMsg = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Web = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Phone = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Innner = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Debug = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlgMold", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.QueryModel")]
    public enum FlgMold : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Product = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Series = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Firm = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryResult = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Others = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnMold", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.QueryModel")]
    public enum ReturnMold : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voice = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Url = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Video = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FilePath = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Others = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebServiceReference.IWebService")]
    public interface IWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/Query", ReplyAction="http://tempuri.org/IWebService/QueryResponse")]
        QueryClient.WebServiceReference.QueryPackage Query(string IpAddress, string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/Query", ReplyAction="http://tempuri.org/IWebService/QueryResponse")]
        System.Threading.Tasks.Task<QueryClient.WebServiceReference.QueryPackage> QueryAsync(string IpAddress, string Code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebServiceChannel : QueryClient.WebServiceReference.IWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceClient : System.ServiceModel.ClientBase<QueryClient.WebServiceReference.IWebService>, QueryClient.WebServiceReference.IWebService {
        
        public WebServiceClient() {
        }
        
        public WebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QueryClient.WebServiceReference.QueryPackage Query(string IpAddress, string Code) {
            return base.Channel.Query(IpAddress, Code);
        }
        
        public System.Threading.Tasks.Task<QueryClient.WebServiceReference.QueryPackage> QueryAsync(string IpAddress, string Code) {
            return base.Channel.QueryAsync(IpAddress, Code);
        }
    }
}
