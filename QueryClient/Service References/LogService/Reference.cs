//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace QueryClient.LogService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemLogQueryArgs", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.LogService")]
    [System.SerializableAttribute()]
    public partial class SystemLogQueryArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime eDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string infoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.LogLevel levelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime sDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userRealNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int useridField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime eDate {
            get {
                return this.eDateField;
            }
            set {
                if ((this.eDateField.Equals(value) != true)) {
                    this.eDateField = value;
                    this.RaisePropertyChanged("eDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string info {
            get {
                return this.infoField;
            }
            set {
                if ((object.ReferenceEquals(this.infoField, value) != true)) {
                    this.infoField = value;
                    this.RaisePropertyChanged("info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.LogLevel level {
            get {
                return this.levelField;
            }
            set {
                if ((this.levelField.Equals(value) != true)) {
                    this.levelField = value;
                    this.RaisePropertyChanged("level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime sDate {
            get {
                return this.sDateField;
            }
            set {
                if ((this.sDateField.Equals(value) != true)) {
                    this.sDateField = value;
                    this.RaisePropertyChanged("sDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userRealName {
            get {
                return this.userRealNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userRealNameField, value) != true)) {
                    this.userRealNameField = value;
                    this.RaisePropertyChanged("userRealName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userid {
            get {
                return this.useridField;
            }
            set {
                if ((this.useridField.Equals(value) != true)) {
                    this.useridField = value;
                    this.RaisePropertyChanged("userid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogLevel", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.Log")]
    public enum LogLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Debug = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fatal = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemLogInfo", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.LogService")]
    [System.SerializableAttribute()]
    public partial class SystemLogInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.LogLevel LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OptionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRealNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.LogLevel Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OptionDate {
            get {
                return this.OptionDateField;
            }
            set {
                if ((this.OptionDateField.Equals(value) != true)) {
                    this.OptionDateField = value;
                    this.RaisePropertyChanged("OptionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRealName {
            get {
                return this.UserRealNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRealNameField, value) != true)) {
                    this.UserRealNameField = value;
                    this.RaisePropertyChanged("UserRealName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryLogQueryArgs", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.LogService")]
    [System.SerializableAttribute()]
    public partial class QueryLogQueryArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime eDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string featureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int fidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.LogLevel levelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int pidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.QueryMold queryMoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.QueryResultMold resultMoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime sDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string code {
            get {
                return this.codeField;
            }
            set {
                if ((object.ReferenceEquals(this.codeField, value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime eDate {
            get {
                return this.eDateField;
            }
            set {
                if ((this.eDateField.Equals(value) != true)) {
                    this.eDateField = value;
                    this.RaisePropertyChanged("eDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string feature {
            get {
                return this.featureField;
            }
            set {
                if ((object.ReferenceEquals(this.featureField, value) != true)) {
                    this.featureField = value;
                    this.RaisePropertyChanged("feature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int fid {
            get {
                return this.fidField;
            }
            set {
                if ((this.fidField.Equals(value) != true)) {
                    this.fidField = value;
                    this.RaisePropertyChanged("fid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.LogLevel level {
            get {
                return this.levelField;
            }
            set {
                if ((this.levelField.Equals(value) != true)) {
                    this.levelField = value;
                    this.RaisePropertyChanged("level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pid {
            get {
                return this.pidField;
            }
            set {
                if ((this.pidField.Equals(value) != true)) {
                    this.pidField = value;
                    this.RaisePropertyChanged("pid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.QueryMold queryMold {
            get {
                return this.queryMoldField;
            }
            set {
                if ((this.queryMoldField.Equals(value) != true)) {
                    this.queryMoldField = value;
                    this.RaisePropertyChanged("queryMold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.QueryResultMold resultMold {
            get {
                return this.resultMoldField;
            }
            set {
                if ((this.resultMoldField.Equals(value) != true)) {
                    this.resultMoldField = value;
                    this.RaisePropertyChanged("resultMold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime sDate {
            get {
                return this.sDateField;
            }
            set {
                if ((this.sDateField.Equals(value) != true)) {
                    this.sDateField = value;
                    this.RaisePropertyChanged("sDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sid {
            get {
                return this.sidField;
            }
            set {
                if ((this.sidField.Equals(value) != true)) {
                    this.sidField = value;
                    this.RaisePropertyChanged("sid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryMold", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.Log")]
    public enum QueryMold : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weixin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShotMsg = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Web = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Phone = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Innner = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Debug = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultMold", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.Log")]
    public enum QueryResultMold : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        已被查询 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未找到 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        被拦截 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        网络异常 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        格式错误 = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryLog", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.Log")]
    [System.SerializableAttribute()]
    public partial class QueryLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FirmIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.LogLevel LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.QueryMold MoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OptionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.QueryResultMold ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SeriesIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Feature {
            get {
                return this.FeatureField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureField, value) != true)) {
                    this.FeatureField = value;
                    this.RaisePropertyChanged("Feature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FirmId {
            get {
                return this.FirmIdField;
            }
            set {
                if ((this.FirmIdField.Equals(value) != true)) {
                    this.FirmIdField = value;
                    this.RaisePropertyChanged("FirmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.LogLevel Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.QueryMold Mold {
            get {
                return this.MoldField;
            }
            set {
                if ((this.MoldField.Equals(value) != true)) {
                    this.MoldField = value;
                    this.RaisePropertyChanged("Mold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OptionDate {
            get {
                return this.OptionDateField;
            }
            set {
                if ((this.OptionDateField.Equals(value) != true)) {
                    this.OptionDateField = value;
                    this.RaisePropertyChanged("OptionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.QueryResultMold Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SeriesId {
            get {
                return this.SeriesIdField;
            }
            set {
                if ((this.SeriesIdField.Equals(value) != true)) {
                    this.SeriesIdField = value;
                    this.RaisePropertyChanged("SeriesId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemLog", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.Log")]
    [System.SerializableAttribute()]
    public partial class SystemLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.LogLevel LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OptionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QueryClient.LogService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.LogLevel Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OptionDate {
            get {
                return this.OptionDateField;
            }
            set {
                if ((this.OptionDateField.Equals(value) != true)) {
                    this.OptionDateField = value;
                    this.RaisePropertyChanged("OptionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QueryClient.LogService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/AnjiSmart.Query.Log.Authority")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastLoginFeatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RealNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaltField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLogin {
            get {
                return this.LastLoginField;
            }
            set {
                if ((this.LastLoginField.Equals(value) != true)) {
                    this.LastLoginField = value;
                    this.RaisePropertyChanged("LastLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastLoginFeature {
            get {
                return this.LastLoginFeatureField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLoginFeatureField, value) != true)) {
                    this.LastLoginFeatureField = value;
                    this.RaisePropertyChanged("LastLoginFeature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWord {
            get {
                return this.PassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.PassWordField, value) != true)) {
                    this.PassWordField = value;
                    this.RaisePropertyChanged("PassWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RealName {
            get {
                return this.RealNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RealNameField, value) != true)) {
                    this.RealNameField = value;
                    this.RaisePropertyChanged("RealName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salt {
            get {
                return this.SaltField;
            }
            set {
                if ((object.ReferenceEquals(this.SaltField, value) != true)) {
                    this.SaltField = value;
                    this.RaisePropertyChanged("Salt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogService.ILogService")]
    public interface ILogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/SystemLogQuery", ReplyAction="http://tempuri.org/ILogService/SystemLogQueryResponse")]
        QueryClient.LogService.SystemLogInfo[] SystemLogQuery(QueryClient.LogService.SystemLogQueryArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/SystemLogQuery", ReplyAction="http://tempuri.org/ILogService/SystemLogQueryResponse")]
        System.Threading.Tasks.Task<QueryClient.LogService.SystemLogInfo[]> SystemLogQueryAsync(QueryClient.LogService.SystemLogQueryArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/SystemLogQueryTake", ReplyAction="http://tempuri.org/ILogService/SystemLogQueryTakeResponse")]
        QueryClient.LogService.SystemLogInfo[] SystemLogQueryTake(QueryClient.LogService.SystemLogQueryArgs args, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/SystemLogQueryTake", ReplyAction="http://tempuri.org/ILogService/SystemLogQueryTakeResponse")]
        System.Threading.Tasks.Task<QueryClient.LogService.SystemLogInfo[]> SystemLogQueryTakeAsync(QueryClient.LogService.SystemLogQueryArgs args, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/QueryLogQuery", ReplyAction="http://tempuri.org/ILogService/QueryLogQueryResponse")]
        QueryClient.LogService.QueryLog[] QueryLogQuery(QueryClient.LogService.QueryLogQueryArgs args, bool withKeepLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/QueryLogQuery", ReplyAction="http://tempuri.org/ILogService/QueryLogQueryResponse")]
        System.Threading.Tasks.Task<QueryClient.LogService.QueryLog[]> QueryLogQueryAsync(QueryClient.LogService.QueryLogQueryArgs args, bool withKeepLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/QueryLogQueryTake", ReplyAction="http://tempuri.org/ILogService/QueryLogQueryTakeResponse")]
        QueryClient.LogService.QueryLog[] QueryLogQueryTake(QueryClient.LogService.QueryLogQueryArgs args, int skip, int take, bool withKeepLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/QueryLogQueryTake", ReplyAction="http://tempuri.org/ILogService/QueryLogQueryTakeResponse")]
        System.Threading.Tasks.Task<QueryClient.LogService.QueryLog[]> QueryLogQueryTakeAsync(QueryClient.LogService.QueryLogQueryArgs args, int skip, int take, bool withKeepLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/LastQueryLogQuery", ReplyAction="http://tempuri.org/ILogService/LastQueryLogQueryResponse")]
        QueryClient.LogService.QueryLog[] LastQueryLogQuery(int id, bool withKeepLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/LastQueryLogQuery", ReplyAction="http://tempuri.org/ILogService/LastQueryLogQueryResponse")]
        System.Threading.Tasks.Task<QueryClient.LogService.QueryLog[]> LastQueryLogQueryAsync(int id, bool withKeepLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/InsertSystemLog", ReplyAction="http://tempuri.org/ILogService/InsertSystemLogResponse")]
        void InsertSystemLog(QueryClient.LogService.SystemLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/InsertSystemLog", ReplyAction="http://tempuri.org/ILogService/InsertSystemLogResponse")]
        System.Threading.Tasks.Task InsertSystemLogAsync(QueryClient.LogService.SystemLog log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/TestConn", ReplyAction="http://tempuri.org/ILogService/TestConnResponse")]
        int TestConn(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/TestConn", ReplyAction="http://tempuri.org/ILogService/TestConnResponse")]
        System.Threading.Tasks.Task<int> TestConnAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetCodeQueryLogs", ReplyAction="http://tempuri.org/ILogService/GetCodeQueryLogsResponse")]
        QueryClient.LogService.QueryLog[] GetCodeQueryLogs(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetCodeQueryLogs", ReplyAction="http://tempuri.org/ILogService/GetCodeQueryLogsResponse")]
        System.Threading.Tasks.Task<QueryClient.LogService.QueryLog[]> GetCodeQueryLogsAsync(string Code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogServiceChannel : global::QueryClient.LogService.ILogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogServiceClient : System.ServiceModel.ClientBase<global::QueryClient.LogService.ILogService>, global::QueryClient.LogService.ILogService {
        
        public LogServiceClient() {
        }
        
        public LogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QueryClient.LogService.SystemLogInfo[] SystemLogQuery(QueryClient.LogService.SystemLogQueryArgs args) {
            return base.Channel.SystemLogQuery(args);
        }
        
        public System.Threading.Tasks.Task<QueryClient.LogService.SystemLogInfo[]> SystemLogQueryAsync(QueryClient.LogService.SystemLogQueryArgs args) {
            return base.Channel.SystemLogQueryAsync(args);
        }
        
        public QueryClient.LogService.SystemLogInfo[] SystemLogQueryTake(QueryClient.LogService.SystemLogQueryArgs args, int skip, int take) {
            return base.Channel.SystemLogQueryTake(args, skip, take);
        }
        
        public System.Threading.Tasks.Task<QueryClient.LogService.SystemLogInfo[]> SystemLogQueryTakeAsync(QueryClient.LogService.SystemLogQueryArgs args, int skip, int take) {
            return base.Channel.SystemLogQueryTakeAsync(args, skip, take);
        }
        
        public QueryClient.LogService.QueryLog[] QueryLogQuery(QueryClient.LogService.QueryLogQueryArgs args, bool withKeepLine) {
            return base.Channel.QueryLogQuery(args, withKeepLine);
        }
        
        public System.Threading.Tasks.Task<QueryClient.LogService.QueryLog[]> QueryLogQueryAsync(QueryClient.LogService.QueryLogQueryArgs args, bool withKeepLine) {
            return base.Channel.QueryLogQueryAsync(args, withKeepLine);
        }
        
        public QueryClient.LogService.QueryLog[] QueryLogQueryTake(QueryClient.LogService.QueryLogQueryArgs args, int skip, int take, bool withKeepLine) {
            return base.Channel.QueryLogQueryTake(args, skip, take, withKeepLine);
        }
        
        public System.Threading.Tasks.Task<QueryClient.LogService.QueryLog[]> QueryLogQueryTakeAsync(QueryClient.LogService.QueryLogQueryArgs args, int skip, int take, bool withKeepLine) {
            return base.Channel.QueryLogQueryTakeAsync(args, skip, take, withKeepLine);
        }
        
        public QueryClient.LogService.QueryLog[] LastQueryLogQuery(int id, bool withKeepLine) {
            return base.Channel.LastQueryLogQuery(id, withKeepLine);
        }
        
        public System.Threading.Tasks.Task<QueryClient.LogService.QueryLog[]> LastQueryLogQueryAsync(int id, bool withKeepLine) {
            return base.Channel.LastQueryLogQueryAsync(id, withKeepLine);
        }
        
        public void InsertSystemLog(QueryClient.LogService.SystemLog log) {
            base.Channel.InsertSystemLog(log);
        }
        
        public System.Threading.Tasks.Task InsertSystemLogAsync(QueryClient.LogService.SystemLog log) {
            return base.Channel.InsertSystemLogAsync(log);
        }
        
        public int TestConn(string token) {
            return base.Channel.TestConn(token);
        }
        
        public System.Threading.Tasks.Task<int> TestConnAsync(string token) {
            return base.Channel.TestConnAsync(token);
        }
        
        public QueryClient.LogService.QueryLog[] GetCodeQueryLogs(string Code) {
            return base.Channel.GetCodeQueryLogs(Code);
        }
        
        public System.Threading.Tasks.Task<QueryClient.LogService.QueryLog[]> GetCodeQueryLogsAsync(string Code) {
            return base.Channel.GetCodeQueryLogsAsync(Code);
        }
    }
}
